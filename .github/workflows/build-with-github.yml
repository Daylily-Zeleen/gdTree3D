name: Build With Github
on: [push]
jobs:
  Build-Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        godot_cpp_branch: ["4.0", "4.1", "4.2", "4.3"]
        # do NOT compile in one go, would result in corrupted DLL (probably due to file-resue of 32bit files in 64bit run)
        target_arch: [x86_32, x86_64]
    steps:
      # clone current repo
      - uses: actions/checkout@v4
      # clone required Godot source code into subfolder
      - uses: actions/checkout@v4
        with:
          repository: 'godotengine/godot-cpp'
          ref: ${{ matrix.godot_cpp_branch }}
          path: 'godot-cpp'
          submodules: true
      - name: create docker image for building our binaries
        run: |
          docker build -t tree3dbuilder:latest .
      # compile binaries via our docker build image (linux)
      # makes it easier to create Linux and Windows binaries on other systems more reliable
      - name: build binaries
        run: |
          # linux 32 bit (x86)
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_debug arch=${{ matrix.target_arch }}
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_release arch=${{ matrix.target_arch }}
      - name: archive built binaries (linux)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('binaries-linux-godot{0}-{1}', matrix.godot_cpp_branch, matrix.target_arch) }}
          if-no-files-found: 'error'
          path: |
            demo/addons/tree3d/libtree3d.linux.*
  Build-Windows:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        godot_cpp_branch: ["4.0", "4.1", "4.2", "4.3"]
        # do NOT compile in one go, would result in corrupted DLL (probably due to file-resue of 32bit files in 64bit run)
        target_arch: [x86_32, x86_64]
    steps:
      # clone current repo
      - uses: actions/checkout@v4
      # clone required Godot source code into subfolder
      - uses: actions/checkout@v4
        with:
          repository: 'godotengine/godot-cpp'
          ref: ${{ matrix.godot_cpp_branch }}
          path: 'godot-cpp'
          submodules: true
      - name: create docker image for building our binaries
        run: |
          docker build -t tree3dbuilder:latest .
      # compile binaries via our docker build image (windows)
      # makes it easier to create Linux and Windows binaries on other systems more reliable
      - name: build binaries
        run: |
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_debug arch=${{ matrix.target_arch }} platform=windows
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_release arch=${{ matrix.target_arch }} platform=windows
      - name: archive built binaries (windows)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('binaries-windows-godot{0}-{1}', matrix.godot_cpp_branch, matrix.target_arch) }}
          if-no-files-found: 'error'
          path: |
            demo/addons/tree3d/libtree3d.windows.*
  Build-MacOS:
    runs-on: macos-latest
    strategy:
      matrix:
        godot_cpp_branch: ["4.0", "4.1", "4.2", "4.3"]
    steps:
      # clone current repo
      - uses: actions/checkout@v4
      # clone required Godot source code into subfolder
      - uses: actions/checkout@v4
        with:
          repository: 'godotengine/godot-cpp'
          ref: ${{ matrix.godot_cpp_branch }}
          path: 'godot-cpp'
          submodules: true
      - name: install scons on macos
        if: ${{ matrix.godot_cpp_branch != '4.0' }}
        run: python -m pip install scons
      # Godot 4.0 needs a specific version
      # see https://github.com/godotengine/godot-cpp/issues/1518
      # see https://github.com/godotengine/godot-cpp/pull/1526
      - name: install older version of scons on macos
        if: ${{ matrix.godot_cpp_branch == '4.0' }}
        run: python -m pip install scons==4.7.0
      - name: build MacOS binaries
        run: |
          # MacOS 64 bit (x86)
          scons target=template_debug arch=x86_64
          scons target=template_release arch=x86_64
          # MacOS 64 bit (Apple Silicon/ARM)
          scons target=template_debug arch=arm64
          scons target=template_release arch=arm64
          # create "Universal 2" files
          lipo -create demo/addons/tree3d/libtree3d.macos.template_release.arm64 demo/addons/tree3d/libtree3d.macos.template_release.x86_64 -output demo/addons/tree3d/libtree3d.macos.template_release.universal
          lipo -create demo/addons/tree3d/libtree3d.macos.template_debug.arm64 demo/addons/tree3d/libtree3d.macos.template_debug.x86_64 -output demo/addons/tree3d/libtree3d.macos.template_debug.universal
      - name: archive built binaries (macos)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('binaries-macos-godot{0}', matrix.godot_cpp_branch) }}
          if-no-files-found: 'error'
          path: |
            demo/addons/tree3d/libtree3d.macos.*

# TODO create installable "ZIP" file and separate "demo" project ZIP
# TODO add "android" and other platforms (if possible)
# TODO add Windows ARM (when arm-mingw is usable from anywhere)