name: Build With Github
on: [push]
jobs:
  Build-Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        godot_cpp_branch: [4.1, 4.2, 4.3]
    steps:
      # clone current repo
      - uses: actions/checkout@v4
      # clone required Godot source code into subfolder
      - uses: actions/checkout@v4
        with:
          repository: 'godotengine/godot-cpp'
          ref: ${{ matrix.godot_cpp_branch }}
          path: 'godot-cpp'
          submodules: true
      - name: create docker image for building our binaries
        run: |
          docker build -t tree3dbuilder:latest .
      # compile binaries via our docker build image (linux)
      # using the Github Actions provided tools end up in corrupted SO files that did not work
      # makes it easier to create Linux and Windows binaries on other systems more reliable
      - name: build binaries
        run: |
          # linux 32 bit (x86)
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_debug arch=x86_32
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_release arch=x86_32
          # linux 64 bit (x86)
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_debug arch=x86_64
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_release arch=x86_64
      - name: archive built binaries (linux)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('binaries-linux-godot{0}', matrix.godot_cpp_branch) }}
          if-no-files-found: 'error'
          path: |
            demo/addons/tree3d/libtree3d.linux.*
  Build-Windows:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        godot_cpp_branch: [4.1, 4.2, 4.3]
    steps:
      # clone current repo
      - uses: actions/checkout@v4
      # clone required Godot source code into subfolder
      - uses: actions/checkout@v4
        with:
          repository: 'godotengine/godot-cpp'
          ref: ${{ matrix.godot_cpp_branch }}
          path: 'godot-cpp'
          submodules: true
      - name: create docker image for building our binaries
        run: |
          docker build -t tree3dbuilder:latest .
      # compile binaries via our docker build image (windows)
      # using the Github Actions provided tools end up in corrupted DLL files that did not work
      # makes it easier to create Linux and Windows binaries on other systems more reliable
      - name: build binaries
        run: |
          # windows 32 bit (x86)
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_debug arch=x86_32 platform=windows
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_release arch=x86_32 platform=windows
          # windows 64 bit (x86)
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_debug arch=x86_64 platform=windows
          docker run --rm -v "$(pwd):/source" tree3dbuilder:latest scons target=template_release arch=x86_64 platform=windows
      - name: archive built binaries (windows)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('binaries-windows-godot{0}', matrix.godot_cpp_branch) }}
          if-no-files-found: 'error'
          path: |
            demo/addons/tree3d/libtree3d.windows.*
  Build-MacOS:
    runs-on: macos-latest
    strategy:
      matrix:
        godot_cpp_branch: [4.1, 4.2, 4.3]
    steps:
      # clone current repo
      - uses: actions/checkout@v4
      # clone required Godot source code into subfolder
      - uses: actions/checkout@v4
        with:
          repository: 'godotengine/godot-cpp'
          ref: ${{ matrix.godot_cpp_branch }}
          path: 'godot-cpp'
          submodules: true
      # install build dependencies/tools on macos
      - run: python -m pip install scons
      - name: build MacOS binaries
        run: |
          # MacOS 64 bit (x86)
          scons target=template_debug arch=x86_64
          scons target=template_release arch=x86_64
          # MacOS 64 bit (Apple Silicon/ARM)
          scons target=template_debug arch=arm64
          scons target=template_release arch=arm64
          # create "Universal 2" files
          lipo -create demo/addons/tree3d/libtree3d.macos.template_release.framework/libtree3d.macos.template_release.arm64 demo/addons/tree3d/libtree3d.macos.template_release.framework/libtree3d.macos.template_release.x86_64 -output demo/addons/tree3d/libtree3d.macos.template_release.framework/libtree3d.macos.template_release.universal
          lipo -create demo/addons/tree3d/libtree3d.macos.template_debug.framework/libtree3d.macos.template_debug.arm64 demo/addons/tree3d/libtree3d.macos.template_debug.framework/libtree3d.macos.template_debug.x86_64 -output demo/addons/tree3d/libtree3d.macos.template_debug.framework/libtree3d.macos.template_debug.universal
      - name: archive built binaries (macos)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('binaries-macos-godot{0}', matrix.godot_cpp_branch) }}
          if-no-files-found: 'error'
          path: |
            demo/addons/tree3d/libtree3d.*

# TODO create installable "ZIP" file and separate "demo" project ZIP